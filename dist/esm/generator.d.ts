import { Connection } from 'mysql2';
export type SqlDataType = 'int' | 'varchar' | 'char' | 'text' | 'blob' | 'float' | 'double' | 'decimal' | 'boolean' | 'date' | 'time' | 'datetime' | 'timestamp' | 'year' | 'enum' | 'set' | 'bit' | 'json' | 'tinyint' | 'smallint' | 'mediumint' | 'bigint' | 'longtext' | 'mediumtext' | 'tinytext' | 'binary' | 'varbinary' | 'geometry' | 'point' | 'linestring' | 'polygon' | 'multipoint' | 'multilinestring' | 'multipolygon' | 'geometrycollection' | 'json_table';
export type InformationSchemaRoutines = {
    SPECIFIC_NAME: string;
    ROUTINE_CATALOG: string | null;
    ROUTINE_SCHEMA: string;
    ROUTINE_NAME: string;
    ROUTINE_TYPE: 'PROCEDURE';
    DATA_TYPE: SqlDataType;
    CHARACTER_MAXIMUM_LENGTH: number | null;
    CHARACTER_OCTET_LENGTH: number | null;
    NUMERIC_PRECISION: number | null;
    NUMERIC_SCALE: number | null;
    DATETIME_PRECISION: number | null;
    CHARACTER_SET_NAME: string | null;
    COLLATION_NAME: string | null;
    DTD_IDENTIFIER: string | null;
    ROUTINE_BODY: 'SQL';
    ROUTINE_DEFINITION: string | null;
    EXTERNAL_NAME: string | null;
    EXTERNAL_LANGUAGE: string | null;
    PARAMETER_STYLE: 'SQL';
    IS_DETERMINISTIC: 'YES' | 'NO';
    SQL_DATA_ACCESS: string;
    SQL_PATH: string | null;
    SECURITY_TYPE: 'DEFINER' | 'INVOKER';
    CREATED: Date;
    LAST_ALTERED: Date;
    SQL_MODE: string;
    ROUTINE_COMMENT: string;
    DEFINER: string;
    CHARACTER_SET_CLIENT: string;
    COLLATION_CONNECTION: string;
    DATABASE_COLLATION: string;
};
export type InformationSchemaParameters = {
    TYPE: "PARAMETER";
    SPECIFIC_CATALOG: string | null;
    SPECIFIC_SCHEMA: string | null;
    SPECIFIC_NAME: string;
    ORDINAL_POSITION: number;
    PARAMETER_MODE: 'IN' | 'OUT' | 'INOUT' | null;
    PARAMETER_NAME: string;
    DATA_TYPE: SqlDataType;
    CHARACTER_MAXIMUM_LENGTH: number | null;
    CHARACTER_OCTET_LENGTH: number | null;
    NUMERIC_PRECISION: number | null;
    NUMERIC_SCALE: number | null;
    DATETIME_PRECISION: number | null;
    CHARACTER_SET_NAME: string | null;
    COLLATION_NAME: string | null;
    ROUTINE_TYPE: 'FUNCTION' | 'PROCEDURE';
    DTD_IDENTIFIER: string | null;
    ROUTINE_BODY: string | null;
};
export type InformationSchemaColumns = {
    TYPE: "COLUMN";
    TABLE_CATALOG: string | null;
    TABLE_SCHEMA: string;
    TABLE_NAME: string;
    COLUMN_NAME: string;
    ORDINAL_POSITION: number;
    COLUMN_DEFAULT: string | null;
    IS_NULLABLE: 'YES' | 'NO';
    DATA_TYPE: SqlDataType;
    CHARACTER_MAXIMUM_LENGTH: number | null;
    CHARACTER_OCTET_LENGTH: number | null;
    NUMERIC_PRECISION: number | null;
    NUMERIC_SCALE: number | null;
    DATETIME_PRECISION: number | null;
    CHARACTER_SET_NAME: string | null;
    COLLATION_NAME: string | null;
    COLUMN_TYPE: string;
    COLUMN_KEY: 'PRI' | 'UNI' | 'MUL' | '';
    EXTRA: string;
    PRIVILEGES: string;
    COLUMN_COMMENT: string;
    GENERATION_EXPRESSION: string;
};
export type SqlTypeToTsTypeMap = {
    [type in SqlDataType]?: string | ((param: InformationSchemaParameters | InformationSchemaColumns) => string);
};
export declare const DefaultSqlTypeToTsTypeMap: SqlTypeToTsTypeMap;
export declare function generateMysqlDatabaseTypeString(connection: Connection, typeMap?: SqlTypeToTsTypeMap): Promise<string>;
export default generateMysqlDatabaseTypeString;
//# sourceMappingURL=generator.d.ts.map